# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Build

on:
  push:
    branches:
      - main
      - 'feature-**'
  pull_request:
    branches:
      - main
      - 'feature-**'

jobs:
  
  Build:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    defaults:
      run:
        shell: ${{ matrix.platform.shell }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: build-win,   os: windows-latest, shell: 'msys2 {0}'}
        - { name: build-linux, os: ubuntu-latest,  shell: sh }
        - { name: build-mac,   os: macos-latest,   shell: sh }
        - { name: build-android,   os: ubuntu-latest, shell: 'sh'}
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: 'Setup MSYS2'
      if: ${{ contains( matrix.platform.name, 'win') }}
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        cache: true
        install: >-
          git
        pacboy: >-
          toolchain:u
          clang:u
          cmake:u
          ninja:u

    - name: Xcode Setup
      if: ${{ contains( matrix.platform.name, 'mac') }}
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - uses: actions/setup-java@v4
      if: ${{ contains( matrix.platform.name, 'android') }}
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '21'
        cache: 'gradle'

    - uses: gradle/actions/setup-gradle@v4
      if: ${{ contains( matrix.platform.name, 'android') }}
      with:
          gradle-version: wrapper
          
      
    - name: Cache Build Folder
      if: ${{ !contains( matrix.platform.name, 'android') }}
      id: cache-build-folder
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/build
        key: ${{ runner.os }}-build-folder

    - name: Configure CMake
      if: ${{ steps.cache-build-folder.outputs.cache-hit != 'true' && !contains( matrix.platform.name, 'android') }}
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake
        -DCMAKE_BUILD_TYPE:STRING=Release
        -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE
        --no-warn-unused-cli
        -S '${{ github.workspace }}'
        -B '${{ github.workspace }}/build'
        -G Ninja

    - name: Desktop build
      if: ${{ !contains( matrix.platform.name, 'android') }}
      run: cmake --build '${{ github.workspace }}/build' --config Release

    - name: Android build
      if: ${{ contains( matrix.platform.name, 'android') }}
      working-directory: ${{ github.workspace }}/android
      run: gradlew --no-daemon --parallel --build-cache --configuration-cache build
    
    - name: Test
      if: ${{ !contains( matrix.platform.name, 'android') }}
      working-directory: ${{ github.workspace }}/build
      run: ctest -C Release --output-on-failure
        
    - name: Package
      if: ${{ !contains( matrix.platform.name, 'android') }}
      working-directory: ${{ github.workspace }}/build
      run: cpack

    - name: 'Store desktop artifacts'
      if: ${{ !contains( matrix.platform.name, 'android') }}
      uses: actions/upload-artifact@v4
      with:
        name: orionsort-${{ matrix.platform.name }}
        path: '${{ github.workspace }}/dist/*'
    
    - name: 'Store android artifacts'
      if: ${{ contains( matrix.platform.name, 'android') }}
      uses: actions/upload-artifact@v4
      with:
        name: orionsort-${{ matrix.platform.name }}
        path: '${{ github.workspace }}/android/app/build/outputs/apk/'